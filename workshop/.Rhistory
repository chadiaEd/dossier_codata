data(movies, package = "ggplot2movies")
g = ggplot(movies, aes(x=length)) + xlim(0, 200) +
geom_histogram(aes(y=..density..), binwidth=3)
library("ggrepel")
library(jrGgplot2)
library("ggplot2")
library("ggrepel")
data(movies, package = "ggplot2movies")
g = ggplot(movies, aes(x=length)) + xlim(0, 200) +
geom_histogram(aes(y=..density..), binwidth=3)
data(movies, package = "ggplot2movies")
g = ggplot(movies, aes(x=length)) + xlim(0, 200) +
geom_histogram(aes(y=..density..), binwidth=3)
g + facet_grid(Comedy ~ .)
movies$floor(movies&year/10)*10
library("ggridges")
ggplot(movies,
aes(x = length, y = year,
group = year, height = ..density..)) +
geom_density_ridges(scale = 10, alpha = 0.7) +
theme_ridges(grid=FALSE) +
scale_x_log10(limits = c(1, 500),
breaks = c(1, 10, 100, 1000),
expand = c(0.01, 0)) +
scale_y_reverse(breaks = seq(2000, 1900, by = -20),
expand = c(0.01, 0))
library("ggridges")
install.packages("ggridges")
library("ggridges")
ggplot(movies,
aes(x = length, y = year,
group = year, height = ..density..)) +
geom_density_ridges(scale = 10, alpha = 0.7) +
theme_ridges(grid=FALSE) +
scale_x_log10(limits = c(1, 500),
breaks = c(1, 10, 100, 1000),
expand = c(0.01, 0)) +
scale_y_reverse(breaks = seq(2000, 1900, by = -20),
expand = c(0.01, 0))
data(movies, package = "ggplot2movies")
known_budget = movies[!is.na(movies), ]
h = ggplot(known_budget, aes(y = length)) + ylim(0, 500)
h1 = h + geom_point(aes(budget), alpha = 0.2)
g + scale_colour_manual(values = c(
"Brosnan" = rgb(192,192,192, maxColorValue = 255), #silver
"Connery" = "Gold",
"Craig" = rgb(205, 127, 50, maxColorValue = 255), #Bronze
"Dalton" = "tomato1",
"Lazenby" = "tomato2",
"Moore" = "tomato3"))
g + scale_colour_grey()
library("gridExtra")
grid.arrange(g1, g2, g3, g4, nrow=2)
install.packages("gridExtra")
grid.arrange(g1, g2, g3, g4, nrow=2)
library("gridExtra")
grid.arrange(g1, g2, g3, g4, nrow=2)
par(mfrow=c(2, 2))
grid.arrange(g1, g2, g3, g4, nrow=2)
print(g1, vp = vplayout(1, 1:2))
g = ggplot(bond, aes(x = Actor, y = Alcohol_Units))
data(bond)
g = ggplot(bond, aes(x = Actor, y = Alcohol_Units))
g2 = g + geom_boxplot(aes(fill = Actor))
print(g1, vp = vplayout(1, 1:2))
g1 = g + geom_boxplot()
print(g1, vp = vplayout(1, 1:2))
print(g1, vp = vplayout(1, 1:2))
vplayout = function(x, y)
viewport(layout.pos.row = x, layout.pos.col = y)
print(g1, vp = vplayout(1, 1:2))
vplayout = function(x, y)+
viewport(layout.pos.row = x, layout.pos.col = y)
print(g1, vp = vplayout(1, 1:2))
vplayout = function(x, y)+
viewport(layout.pos.row = 1, layout.pos.col = 1:2)
print(g1, vp = vplayout(1, 1:2))
print(g1)
library("grid")
grid.newpage()
pushViewport(viewport(layout = grid.layout(2, 2)))
g = ggplot(bond, aes(x = Actor, y = Alcohol_Units))
(g1 = g + geom_point())
g2 = g + geom_point(aes(fill = Actor))
ibrary("gridExtra")
grid.arrange(g1, g2, nrow=2)
vplayout = function(x, y)+
viewport(layout.pos.row = 1, layout.pos.col = 1:2)
pushViewport(viewport(layout = grid.layout(2, 2)))
print(g1, vp = vplayout(1, 1:2))
library(recommenderlab)
install.packages("recommenderlab")
View(g1)
library(tidyverse)
library(ggplot2)
library(rafalib)
curl -LO https://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
wget https://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
wget "https://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
wget https://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
wget http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
curl -LO http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
curl -LO http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics\-2018/master/files/readCounts.csv
library(RCurl)
install.packages("RCurl")
#data
library(RCurl)
curl -LO http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv
curl -LO "http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
curl -LO "http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
setwd("~/chadia-files/workshop")
curl -LO "http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
URL <- "http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
x <- getURL(URL)
x
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
URL <- "http://raw.githubusercontent.com/fpsom/CODATA-RDA-Advanced-Bioinformatics-2018/master/files/readCounts.csv"
x <- getURL(URL)
x
readCounts <- read.csv("~/chadia-files/workshop/readCounts.csv")
View(readCounts)
view(readCounts)
summary(readCounts)
View(readCounts)
summary(readCounts)
summary(readCounts)
readCounts <- read.csv("readCounts.csv")
View(readCounts)
summary(readCounts)
dataSamples <-  readCounts
ggplot(data= dataSamples)+geom_point( aes(x= Sample, y = ReadCounts ),size = 3)
library(ggplot2)
ggplot(data= dataSamples)+geom_point( aes(x= Sample, y = ReadCounts ),size = 3)
View(dataSamples)
ggplot(data= dataSamples)+geom_point( aes(x= Sample, y = ReadCount ),size = 3)
ggplot(data= dataSamples)+geom_point( aes(x= Sample, y = ReadCount ),size = 3) +
stat_smooth(aes(x= Sample, y = ReadCounts ), method = "lm",formula = y ~ x , se = TRUE)
ggplot(data= dataSamples)+geom_point( aes(x= Sample, y = ReadCount ),size = 3) +
stat_smooth(aes(x= Sample, y = ReadCount ), method = "lm",formula = y ~ x , se = TRUE)
ggplot(data= dataSamples)+
facet_grid(~Treatement)+
geom_point(aes(x= Sample, y = ReadCount ), size = 3) +
scale_color_manual(values=c("blue", "green", "red")) +
stat_smooth(aes(x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE)
ggplot(data= dataSamples)+
facet_grid(~Treatement)+
geom_point(aes(x= Sample, y = ReadCount, colour = Treatment ), size = 3) +
scale_color_manual(values=c("blue", "green", "red")) +
stat_smooth(aes(x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE)
ggplot(data= dataSamples)+
facet_grid(~Treatement)+
geom_point(aes(x= Sample, y = ReadCount, colour = Treatment ), size = 3)
ggplot(data=dataSamples) +
facet_grid( ~ Treatment) +
geom_point(aes(x = Sample, y = ReadCount, colour = Treatment), size = 3) +
scale_color_manual(values=c("blue", "green", "red")) +
stat_smooth(aes(x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE) +
labs(x = "Sample", y = "Read Count", title = "All read counts")
ggplot(data=dataSamples) +
facet_grid( ~ Treatment) +
geom_point(aes(x = Sample, y = ReadCount, colour = Treatment), size = 3)
ggplot(data=dataSamples) +
facet_grid( ~ Treatment) +
geom_point(aes(x = Sample, y = ReadCount, colour = Treatment), size = 3)
ggplot(data=dataSamples) +
facet_grid( ~ Treatment) +
geom_point(aes(x = Sample, y = ReadCount, colour = Treatment), size = 3) +
scale_color_manual(values=c("blue", "green", "red"))
ggplot(data=dataSamples) +
facet_grid( ~ Treatment) +
geom_point(aes(x = Sample, y = ReadCount, colour = Treatment), size = 3) +
scale_color_manual(values=c("blue", "green", "red")) +
stat_smooth(aes(x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE) +
labs(x = "Sample", y = "Read Count", title = "All read counts")
ggplot( data = dataSamples) +
facet_grid(Student ~ Treatment) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
ggplot( data = dataSamples) +
facet_grid(lane ~ Treatment) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
ggplot( data = dataSamples) +
facet_grid(Lane ~ Treatment) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
View(dataSamples)
head(dataSamples)
ggplot( data = dataSamples) +
facet_grid(Lane ~ Library_Prep_Date) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
# scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
ggplot( data = dataSamples) +
facet_grid(Library_Prep_Date ~ Treatment  ) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
controlPop <- filter(dataSamples, Treatement == "Blue") %>% select (Readcount) %>% unlist
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
filter(dataSamples, Treatment == "Blue")
filter(dataSamples, Treatment == "Blue")
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
treatmentPop <- filter(dataSamples, Treatment == "Green") %>% select(ReadCount) %>% unlist
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
library(tidyverse)
library(ggplot2)
library(rafalib)
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
treatmentPop <- filter(dataSamples, Treatment == "Green") %>% select(ReadCount) %>% unlist
print ( mean(controlPop))
print ( mean(controlPop))
control <- sample(controlPop, 10)
mean(control)
ggplot( data = dataSamples) +
facet_grid(Lane ~ Treatment) +
geom_point( aes(x = Sample, y = ReadCount, color = Treatment), size = 3 ) +
scale_color_manual( values = c ("blue", "green", "red")  ) +
stat_smooth( aes ( x = Sample, y = ReadCount), method = "lm", formula = y ~ x, se = TRUE   )
control <- sample(controlPop, 10)
mean(control)
control <- sample(controlPop, 10)
mean(control)
obsdiff <- abs( mean(treatmentPop) - mean(controlPop))
print(obsdiff)
set.seed(1)
n <- 1000
null <- vector("numeric", n)
for (i in 1:n) {
# 10 control samples
control <- sample(controlPop, 10)
# 10 "treatment" samples
treatment <- sample(controlPop, 10)
null[i] <- mean(treatment) - mean(control)
}
mean(null >= obsdiff)
null
mean(null >= obsdiff)
x <- controlPop
smallest  <- floor(min(x))
largest <- ceiling(max(x))
values <- seq(smalles, largest , len = 300)
values <- seq(smallest, largest , len = 300)
values <- seq(smallest, largest , len = 300)
heightcdf <- ecdf(x)
plot(values, heightcdf(values), type = "l")
bins <- seq(60, 140, 10)
hist(x, breaks = bins)
n <- 500
nullplot(-15, 15, -1, 45, xlab="Observed differences (diff counts)", ylab="Frequency")
totals <- vector("numeric",41)
for (i in 1:n) {
control <- sample(controlPop, 10)
treatment <- sample(controlPop, 10)
nulldiff <- mean(treatment) - mean(control)
j <- pmax(pmin(round(nulldiff)+20, 41), 1)
totals[j] <- totals[j]+1
text(j-20,totals[j],pch=15,round(nulldiff,1))
# if(i < 15) Sys.sleep(1) ## You can add this line to see values appear slowly
}
hist(null, freq = TRUE)
abline(v = obsdiff, col = "red", lwd = 2)
et.seed(1)
controlPop <- filter(dataSamples, Treatment == "Blue") %>% select(ReadCount) %>% unlist
treatmentPop <- filter(dataSamples, Treatment == "Green") %>% select(ReadCount) %>% unlist
control <- sample(controlPop, 10)
treatment <- sample(treatmentPop, 10)
diff <- abs(mean(treatment) - mean(control))
print(diff)
sd(control) / sqrt(length(control))
se <- sqrt(
var(treatment) / length(treatment) +
var(control) / length(control)
)
tstat <- diff /se
print(tstat)
sd(control) / sqrt(length(control))
se <- sqrt(
var(treatment) / length(treatment) +
var(control) / length(control)
)
tstat <- diff /se
print(tstat)
print(tstat)
